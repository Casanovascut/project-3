{"version":3,"sources":["components/SearchBar.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav.js","components/RecipeDisplay.js","pages/RecipePage.js","utils/queries.js","components/UserDisplay.js","pages/UserPage.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/RecipeForm.js","pages/ChefMode.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","_useState","useState","_useState2","_slicedToArray","searchInput","setSearchInput","_useState3","_useState4","recipes","setRecipes","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","options","response","wrap","_context","prev","next","preventDefault","method","url","params","ingredients","number","ignorePantry","ranking","headers","process","axios","request","sent","data","console","log","t0","error","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","className","type","placeholder","onChange","e","target","value","map","recipe","Link","to","pathname","concat","id","state","recipeId","title","src","image","alt","missedIngredientCount","Home","LOGIN","gql","_templateObject","_taggedTemplateLiteral","ADD_RECIPE","_templateObject2","_templateObject3","ADD_USER","_templateObject4","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","reload","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","mutationResponse","variables","Auth","handleChange","_event$target","name","_objectSpread","_defineProperty","htmlFor","Signup","addUser","firstName","lastName","Nav","role","loggedIn","href","onClick","logout","RecipeDisplay","recipeInfo","setRecipeInfo","split","length","addRecipe","useEffect","then","catch","handleSave","_ref2","_yield$addRecipe","servings","readyInMinutes","extendedIngredients","ingredient","original","instructions","analyzedInstructions","steps","step","amount","unit","showButton","RecipePage","QUERY_USER","_templateObject5","UserPage","_useQuery","useQuery","loading","message","user","favorites","index","UserDisplay","reducer","action","products","_toConsumableArray","cartOpen","cart","product","_id","purchaseQuantity","newState","filter","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","initialState","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","dispatch","RecipeForm","list","ingredientsList","setIngredientsList","userInput","setUserInput","onKeyDown","keyCode","style","marginBottom","confirm","ingredent","position","deleteIngredient","marginLeft","ChefMode","httpLink","createHttpLink","uri","authLink","setContext","_","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","exact","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","React","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.663b3163.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\n\nconst SearchBar = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const options = {\n      method: 'GET',\n      url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients',\n      params: {\n        ingredients: searchInput,\n        number: '5',\n        ignorePantry: 'true',\n        ranking: '1'\n      },\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_APIKEY,\n        'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await axios.request(options);\n      setRecipes(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row\">\n          <input\n            type=\"search\"\n            placeholder=\"Search...\"\n            onChange={handleChange}\n            value={searchInput}\n          />\n          <div>\n            <button type=\"submit\">SEARCH</button>\n          </div>\n        </div>\n      </form>\n      <div>\n        {recipes.map((recipe) => (\n          <div key={recipe.id}>\n            <Link to={{\n              pathname: `/recipes/${recipe.id}`, state: {\n                recipeId: recipe.id\n              }\n            }}>\n              <h2>{recipe.title}</h2>\n            </Link>\n            <img src={recipe.image} alt={recipe.title} />\n            <p>Missing Ingredients: {recipe.missedIngredientCount}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;","import React from \"react\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst Home= () => {\n    return <div>\n        <SearchBar></SearchBar>\n    </div>\n}\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n// can be updated to add stuff to grocery list\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\nexport const ADD_RECIPE = gql`\n  mutation addRecipe(\n    $title: String!\n    $image: String!\n    $servings: Int!\n    $readyInMinutes: Int!\n    $ingredients: [String!]!\n    $instructions: [String!]!\n  ) {\n    addRecipe(\n      title: $title\n      image: $image\n      servings: $servings\n      readyInMinutes: $readyInMinutes\n      ingredients: $ingredients\n      instructions: $instructions\n    ) {\n      _id\n      title\n      image\n      servings\n      readyInMinutes\n      ingredients\n      instructions\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Sign Up</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n          <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Log In</Link>\n\n      <h2>Sign Up</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n        return (\n        <ul className=\"flex-row\">\n            <li className=\"mx-1\">\n                <Link to=\"/profile\">\n                    My Profile\n                </Link>\n            </li>\n            \n            <li className=\"mx-1\">\n              <Link to=\"/ChefMode\">\n                  Chef Mode\n              </Link>\n            </li>\n            \n            <li className=\"mx-1\">\n              <Link to=\"/Recipes\">\n                  My Recipes\n              </Link>\n            </li>\n            \n            <li className=\"mx-1\">\n              <Link to=\"/DoGroceries\">\n                  Do Groceries\n              </Link>\n            </li> \n            \n            <li className=\"mx-1\">\n              {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n              <a href=\"/\" onClick={() => Auth.logout()}>\n                  Log Out\n              </a>\n            </li>\n        </ul>\n    );\n    } else {\n        return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n                Log In\n            </Link>\n          </li>\n          \n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n                Sign Up\n            </Link>\n            </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"spaghetti-plate\">🍝 </span>\n          EasyMeals\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useMutation } from '@apollo/client';\nimport { ADD_RECIPE } from '../utils/mutations';\nimport Auth from \"../utils/auth\";\n\nconst RecipeDisplay = ({ recipe }) => {\n  const [recipeInfo, setRecipeInfo] = useState(null);\n  const recipeId = window.location.href.split(\"/\")[window.location.href.split(\"/\").length -1]\n  const [addRecipe] = useMutation(ADD_RECIPE);\n  // console.log(recipeId)\n\n  function showButton () {\n    if (Auth.loggedIn()) {\n      return (<button onClick={handleSave}>Save Recipe</button>)}\n  }\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      url: `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${recipeId}/information`,\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_APIKEY,\n        'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com'\n      }\n    };\n\n    axios(options)\n      .then(response => {\n        setRecipeInfo(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [recipeId]);\n\n  if (!recipeInfo) {\n    return <div>Loading...</div>;\n  }\n\n  const handleSave = async (event) => {\n    \n    // console.log(event.target)\n    try {\n      const { data } = await addRecipe({\n        variables: {\n          title: recipeInfo.title,\n          image: recipeInfo.image,\n          servings: recipeInfo.servings,\n          readyInMinutes: recipeInfo.readyInMinutes,\n          ingredients: recipeInfo.extendedIngredients.map(ingredient => ingredient.original),\n          instructions: recipeInfo.analyzedInstructions[0].steps.map(step => step.step),\n        },\n      });\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{recipeInfo.title}</h2>\n      <img src={recipeInfo.image} alt={recipeInfo.title} />\n      <p>Servings: {recipeInfo.servings}</p>\n      <p>Ready in: {recipeInfo.readyInMinutes} minutes</p>\n      <h3>Ingredients:</h3>\n      <ul>\n        {recipeInfo.extendedIngredients.map(ingredient => (\n          <li key={ingredient.id}>\n            {ingredient.name} ({ingredient.amount} {ingredient.unit})\n          </li>\n        ))}\n      </ul>\n      <h3>Instructions:</h3>\n      <ol>\n        {recipeInfo.analyzedInstructions[0].steps.map(step => (\n          <li key={step.number}>{step.step}</li>\n        ))}\n      </ol>\n      {showButton()}\n    </div>\n  );\n};\n\nexport default RecipeDisplay;\n","import React from \"react\";\nimport RecipeDisplay from \"../components/RecipeDisplay\";\n\n\nconst RecipePage= () => {\n    return <div>\n        <RecipeDisplay></RecipeDisplay>\n    </div>\n}\n\nexport default RecipePage;","import { gql } from '@apollo/client';\n\n// update to queries to match our project\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      favorites {\n        title\n        image\n        servings\n        readyInMinutes\n        ingredients\n        instructions\n        }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { QUERY_USER } from '../utils/queries';\n\nconst UserPage = () => {\n  const { loading, error, data } = useQuery(QUERY_USER);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error! {error.message}</p>;\n\n  const user = data.user;\n\n  return (\n    <div className=\"user-page\">\n      {user ? (\n        <h1>\n          Welcome, {user.firstName} {user.lastName}!\n        </h1>\n      ) : (\n        <p>No user found</p>\n      )}\n      <div className=\"saved-recipes-container\">\n        {user &&\n          user.favorites.map((recipe, index) => (\n            <div key={index} className=\"recipe\">\n              <h2>{recipe.title}</h2>\n              <img\n                src={recipe.image}\n                alt=\"recipe image\"></img>\n              {/* Additional recipe information */}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPage;","import React from \"react\";\nimport UserDisplay from \"../components/UserDisplay\";\n\n\nconst UserPage= () => {\n    return <div>\n        <UserDisplay></UserDisplay>\n    </div>\n}\n\nexport default UserPage;","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","// update actions to match reducer js for redux\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from 'react';\n\nimport { useProductReducer } from './reducers'\nconst StoreContext = createContext();\n\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    // these values should change\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst RecipeForm = (props) => {\n    const [ingredientsList,setIngredientsList]=useState(props.list)\n    \n    const deleteIngredient = (index)=>{\n        const confirmation=window.confirm(`Do you want to delete ${ingredientsList[index]}?`)\n        if(confirmation){\n            setIngredientsList(ingredientsList.filter((ingredent,position)=>position!==index))\n        }\n    }\n    const [userInput,setUserInput]=useState('')\n    const handleChange=(event)=>{\n        console.log('user input',event.target.value)\n        setUserInput(event.target.value)\n    }\n\n    const handleEnter=(event)=>{\n        if(event.keyCode===13){\n            setIngredientsList([...ingredientsList,userInput])\n            setUserInput(\"\")\n        }\n    }\n        \n    return <div>\n    <h1>ingredients List</h1>\n    <p><b>you entered:</b>{userInput}</p>\n    <input onKeyDown={handleEnter} onChange={handleChange} type=\"text\" placeholder=\"Enter ingredient name\" />\n        <ul>\n        {ingredientsList.map((ingredient,index)=><li style={{marginBottom:\"10px\"}} key={`ingredient-${index}`}>\n                {ingredient} <button onClick={()=>deleteIngredient(index)} style={{marginLeft:\"20px\"}}>X</button>\n            </li>)}\n    </ul>\n</div>\n}\n\nexport default RecipeForm","import React from \"react\";\nimport RecipeForm from \"../components/RecipeForm\";\n\n\nexport const ChefMode = () => {\n    return <div>\n        <RecipeForm list={['pasta','salad']}/>\n    </div>\n} ","// update to match pages routes\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\n// import Detail from './pages/Detail';\n// import NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport RecipePage from './pages/RecipePage';\nimport UserPage from './pages/UserPage'\nimport { StoreProvider } from './utils/GlobalState';\nimport { ChefMode } from './pages/ChefMode';\n// import Success from './pages/Success';\n// import OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                exact path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/recipes/:id\" \n                element={<RecipePage />} \n              />\n              <Route \n                path=\"/chefmode\" \n                element={<ChefMode />} \n              />\n              <Route \n                path=\"/profile\"\n                element={<UserPage />}\n              />\n              \n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}