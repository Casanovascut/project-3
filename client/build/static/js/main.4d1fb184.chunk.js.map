{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","App.js","serviceWorker.js","index.js"],"names":["Home","_jsx","LOGIN","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","_templateObject3","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","_useState","useState","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","mutationResponse","wrap","_context","prev","next","preventDefault","variables","sent","data","Auth","t0","console","log","stop","_x","apply","arguments","handleChange","_event$target","target","name","_objectSpread","_defineProperty","_jsxs","className","children","Link","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","addUser","firstName","lastName","Nav","role","loggedIn","href","onClick","logout","reducer","state","action","products","_toConsumableArray","cartOpen","cart","concat","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","initialState","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","dispatch","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d1fb184.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home= () => {\n    return <div>\n\n    </div>\n}\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n// can be updated to add stuff to grocery list\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n        return (\n        <ul className=\"flex-row\">\n            <li className=\"mx-1\">\n                <Link to=\"/orderHistory\">\n                    Order History\n                </Link>\n            </li>\n            \n            <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n                Logout\n            </a>\n            </li>\n        </ul>\n    );\n    } else {\n        return (\n        <ul className=\"flex-row\">\n            <li className=\"mx-1\">\n            <Link to=\"/signup\">\n                Signup\n            </Link>\n            </li>\n\n            <li className=\"mx-1\">\n            <Link to=\"/login\">\n                Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","// update actions to match reducer js for redux\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from 'react';\n\nimport { useProductReducer } from './reducers'\nconst StoreContext = createContext();\n\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    // these values should change\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","// update to match pages routes\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\n// import Detail from './pages/Detail';\n// import NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\n// import Success from './pages/Success';\n// import OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              {/* <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              /> */}\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}